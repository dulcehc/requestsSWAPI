{"version":3,"sources":["components/menu/ListItem.js","components/menu/Menu.js","components/detail/Information.js","services/getImage.js","constants/images.js","components/detail/Detail.js","components/App.js","serviceWorker.js","index.js"],"names":["ListItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","character","onClickedItem","react_default","a","createElement","className","onClick","Component","Menu","_ref","data","onSelected","map","menu_ListItem","name","key","handleCharacter","Information","gender","home","specie","films","sort","b","id","film","concat","title","renderFilms","getImage","Detail","getFilms","info","getHome","homeworld","getSpecie","species","nextProps","setState","urlHome","_this2","fetch","then","json","res","_this3","newFilms","push","episode_id","specieURL","_this4","_this$props","_this$state","src","detail_Information","App","handleSelectionCharacter","console","log","information","filter","person","persons","results","length","menu_Menu","detail_Detail","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.25d0ebd7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass ListItem extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      character: props.character\n    }\n\n  }\n\n  render() {\n    const { character } = this.state;\n    const { onClickedItem } = this.props;\n    return (\n      <div className='ListItem' onClick={onClickedItem}>\n        {character}\n      </div>\n    );\n  }\n}\n\nListItem.propTypes = {\n  character: PropTypes.string.isRequired,\n  onClickedItem: PropTypes.func,\n};\n\n\nexport default ListItem;","import React, { Component } from 'react';\nimport ListItem from './ListItem';\n\nconst Menu = ({data, onSelected}) => {\n  const handleCharacter = character => {\n    onSelected(character);\n  }\n\n  return (\n    <div className=\"Menu\">\n      {\n        data.map(character => (\n          <ListItem\n            character={character.name}\n            key={character.name}\n            onClickedItem={()=>handleCharacter(character.name)}\n          />\n        ))\n      }\n    </div>\n  );\n\n}\n\nexport default Menu;","import React from \"react\";\n\nconst renderFilms = (films) => {\n  return (\n    <tr key=\"film\">\n      <td key=\"text-film\">Films: </td>\n      <td key=\"data-film\">\n        <ul>\n          {\n            films.sort((a, b) => a.id > b.id ? 1 : -1)\n            .map((film => (\n              <li key={film.id}>{`Episode ${film.id} - ${film.title}`}</li>\n            )))\n          }\n        </ul>\n      </td>\n    </tr>\n  );\n}\n\nconst Information = ({gender, home, specie, films}) => {\n  return (\n    <div className=\"Information\">\n      <table className=\"Information__table\">\n        <tbody>\n          <tr key=\"gender\">\n            <td key=\"text-gender\">Gender: </td>\n            <td key=\"data-gender\">{gender}</td>\n          </tr>\n          <tr key=\"home\">\n            <td key=\"text-home\">Home: </td>\n            <td key=\"data-home\">{home}</td>\n          </tr>\n          <tr key=\"specie\">\n            <td key=\"text-specie\">Specie: </td>\n            <td key=\"data-specie\">{specie}</td>\n          </tr>\n          {films && renderFilms(films)}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Information;","import { LUKE, C3PO, R2D2, VADER, LEIA, OWEN, R5D4, BIGGS, OBIWAN, BERU } from './../constants/images';\n\nconst getImage = name => {\n  switch (name) {\n    case 'Luke Skywalker':\n      return LUKE;\n    case 'C-3PO':\n      return C3PO;\n    case 'R2-D2':\n      return R2D2;\n    case 'Darth Vader':\n      return VADER;\n    case 'Leia Organa':\n      return LEIA;\n    case 'Owen Lars':\n      return OWEN;\n    case 'Beru Whitesun lars':\n      return BERU;\n    case 'R5-D4':\n      return R5D4;\n    case 'Biggs Darklighter':\n      return BIGGS;\n    case 'Obi-Wan Kenobi':\n      return OBIWAN;\n    default:\n      break;\n  }\n};\n\nexport default getImage;\n","export const BB8 = 'img/bb8.png';\n\nexport const BERU = 'img/beru.png';\n\nexport const BOBA = 'img/boba-fett.png';\n\nexport const BIGGS = 'img/BiggsDarklighter.png';\n\nexport const C3PO = 'img/c3po.png';\n\nexport const CHEW = 'img/chewbacca.png';\n\nexport const LEIA = 'img/leia.png';\n\nexport const LUKE = 'img/luke.png';\n\nexport const OBIWAN = 'img/obiwan.png';\n\nexport const OWEN = 'img/owen_lars.jpg';\n\nexport const PALPA = 'img/palpatine.png';\n\nexport const R2D2 = 'img/r2d2.png';\n\nexport const R5D4 = 'img/R5-D4.png';\n\nexport const VADER = 'img/vader.png';\n\nexport const YODA = 'img/yoda.png';\n","import React, { Component } from 'react';\nimport Information from './Information';\n\nimport getImage from '../../services/getImage';\n\nclass Detail extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      films: null,\n      home: null,\n      specie: null\n    }\n  }\n\n  componentDidMount() {\n    this.getFilms(this.props.info.films);\n    this.getHome(this.props.info.homeworld);\n    this.getSpecie(this.props.info.species[0]);\n  }\n\n   componentWillReceiveProps(nextProps) {\n    if (nextProps.character !== this.props.character) {\n      this.setState({ films: null, home: null});\n      this.getFilms(nextProps.info.films);\n      this.getHome(nextProps.info.homeworld);\n      this.getSpecie(nextProps.info.species[0]);\n    }\n  }\n\n  getHome(urlHome) {\n    fetch(urlHome)\n      .then(data => data.json())\n      .then(res => {\n        this.setState({ home: res.name})\n      })\n  }\n  getFilms(films) {\n    const newFilms = []\n\n    films.map(film => {\n      fetch(film)\n        .then(data => data.json())\n        .then(res => {\n          newFilms.push({\n            title: res.title,\n            id: res.episode_id\n          });\n          this.setState({\n            films: newFilms\n          });\n        })\n    })\n  }\n\n  getSpecie(specieURL) {\n    fetch(specieURL)\n      .then(data => data.json())\n      .then(res => {\n        this.setState({\n          specie: res.name\n        })\n      })\n  }\n\n  render() {\n    const { character, info } = this.props;\n    const { films, home, specie } = this.state;\n\n    return (\n      <div className=\"Detail\">\n        <h1 className=\"Detail__title\">{character}</h1>\n\n        <div className=\"Detail__information\">\n          <div className=\"Detail__picture\">\n            <img src={getImage(character)} />\n          </div>\n          <Information\n            gender={info.gender}\n            home={home}\n            specie={specie}\n            films={films}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Detail;\n","import React, { Component } from 'react';\nimport Menu from './menu/Menu';\nimport Detail from './detail/Detail';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      character: null,\n      data: [],\n    };\n  }\n\n  componentDidMount() {\n    // get all characters\n    const url = 'https://swapi.co/api/people/';\n\n    fetch(url)\n      .then(data => data.json())\n      .then(persons => {\n        this.setState({\n          data: persons.results,\n        });\n      });\n  }\n\n  handleSelectionCharacter = character => {\n    console.log('character:', character);\n    this.setState({\n      character,\n    });\n  };\n\n  information = character => {\n    return this.state.data.filter(person => person.name === character)[0];\n  };\n\n  render() {\n    const { character, data } = this.state;\n    console.log('character render-app: ', character);\n    return (\n      <div className=\"App\">\n        <div className=\"App__title\">\n          <img src=\"img/star_wars.png\" />\n        </div>\n        <div className=\"container\">\n          {data.length > 0 ? (\n            <Menu data={data} onSelected={this.handleSelectionCharacter} />\n          ) : (\n            'loading'\n          )}\n          {character && <Detail character={character} info={this.information(character)} />}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/css/index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}